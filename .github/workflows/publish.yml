name: Github create release
on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build packages
    runs-on: windows-latest
    outputs:
      version: ${{ steps.version_npm.outputs.version }}

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-dotnet@v3
      with:
        global-json-file: global.json

    - name: Get build-id from tag
      id: parse-tag
      run: |
        $officialBuildId="${{ github.ref_name }}".Split(".")[-2, -1] -Join "."
        "officialBuildId=$officialBuildId" >> $env:GITHUB_OUTPUT

    - name: Build dotnet
      run: dotnet build -c Release -p:OfficialBuildId=${{ steps.parse-tag.outputs.officialBuildId }} src/AutoRest.CSharp/AutoRest.CSharp.csproj
      env:
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
        DOTNET_CLI_TELEMETRY_OPTOUT: 1

    - name: Update npm version
      id: version_npm
      working-directory: ./artifacts/bin/AutoRest.CSharp/Release/netcoreapp3.1
      run: |
        $packageVersion="${{ github.ref_name }}".TrimStart("v")
        npm version --no-git-tag-version $packageVersion
      shell: pwsh

    - name: Artifact build
      uses: actions/upload-artifact@v3
      with:
        name: autorest-csharp
        path: |
          artifacts/bin/AutoRest.CSharp/Release/netcoreapp3.1

    - name: Pack npm
      id: pack_npm
      working-directory: ./artifacts/bin/AutoRest.CSharp/Release/netcoreapp3.1
      run: npm pack -q

    - name: Artifact npm
      uses: actions/upload-artifact@v3
      with:
        name: autorest-csharp-npm
        path: |
          artifacts/bin/AutoRest.CSharp/Release/netcoreapp3.1/*.tgz

  github-release:
    name: Github release
    needs: build
    runs-on: windows-latest

    steps:
    - name: Download npm package
      uses: actions/download-artifact@v3
      with:
        name: autorest-csharp-npm

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          *.tgz
